package com.afsal.dev.firbaseligin.dataimport com.afsal.dev.firbaseligin.data.uttils.awaitimport com.google.firebase.auth.FirebaseAuthimport com.google.firebase.auth.FirebaseUserimport com.google.firebase.auth.UserProfileChangeRequestimport javax.inject.Injectclass AuthenticationRepositoryImpl    @Inject constructor( private val firebaseAuth: FirebaseAuth) :    AuthenticationRepository {    override suspend fun logInUser(email: String, password: String): Resource<FirebaseUser> {        return try {            val result = firebaseAuth.signInWithEmailAndPassword(email, password).await()            Resource.Success(result.user!!)        } catch (e: Exception) {            e.printStackTrace()            Resource.Failure(e)        }    }    override suspend fun singUp(        name: String,        email: String,        password: String    ): Resource<FirebaseUser> {        return try {            val result = firebaseAuth.createUserWithEmailAndPassword(email, password).await()            result?.user?.updateProfile(                UserProfileChangeRequest.Builder().setDisplayName(name).build()            )?.await()            Resource.Success(result.user!!)        } catch (e: Exception) {            e.printStackTrace()            Resource.Failure(e)        }    }    override fun logOut() {        firebaseAuth.signOut()    }    override val currentUser: FirebaseUser?        get() = firebaseAuth.currentUser}